<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- Loading the annotation -->
	<context:component-scan
		base-package="com.lti.service, com.lti.dao" />

	<!-- DataSource/ Connection Pool configuration -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="hr" />
	</bean>


	<!-- ============ Hibernate/JPA Configuration ============= -->
	<!-- This bean entry will get the EntityManagerFactory & EntityManager object 
		created for us. Also we don't need a separate META-INF/persistence.xml as 
		the required configuration of the ORM can be done within this bean definition 
		itself -->
	<bean id="myEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" /> <!-- Database which we are going to use -->
		<property name="packagesToScan" value="com.lti.entity" /> <!-- Location of the entity classes -->
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				 <prop key="hibernate.hbm2ddl.auto">update</prop> 
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- This bean entry will provide us the with the support for managing transactions 
		in our application. -->
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="myEmf" />
	</bean>

	<!-- Required along with the above bean entry for proper working of @Transactional 
		annotation -->
	<tx:annotation-driven />
</beans>